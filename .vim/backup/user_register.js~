/**
 * Created by William Guan on 2013-12-12.
 */


var database = require('../database');
var utime = require('../lib/utime').getTimePoint
var fillGap = require('../lib/utime').fillGap

var YmcaLogger = require('../../tools/logging/ymca-logger'),
    ymcaLogger = new YmcaLogger(['AggregationController-YmcRegisters']);

exports.api = function(req,res){

    var type = req.query.type;
    var ymc_id = req.query.token;
    var timezone = req.query.timezone;
    var collection = database.collectionFromName(req.query.collection_name);

    var startTime,endTime,
        group={};

    var result = utime[type](null, null, timezone)
    ymcaLogger.log({result:result})

    startTime = result.from_time
    endTime = result.to_time
    group = result.group

    var matchQuery = {
                "properties.YA0token":ymc_id,
                event: {$in:["register","YA0register"]},
            };
    switch(timezone) {
        case "GMT":
            matchQuery['properties.time'] = {"$gte": startTime, "$lt": endTime}
            break;
        case "pacific":
            matchQuery['properties.time_pacific'] = {"$gte": startTime, "$lt": endTime}
            break;
    }

    if (result.error){
        res.send({error:result.error})
    } else {

        collection.aggregate(
            [{
                $match: matchQuery
            },{
                $group:{
                    _id:group
                }
            },{
                $group:{
                    _id:{y:"$_id.year",t:"$_id.indexOfTime"},
                    users: {$sum: 1 }
                }
            },{
                $sort:{_id:1}
            }],
            function(err,result){
                ymcaLogger.log({result:result})
                var result2 = fillGap(startTime,endTime,type,result)
                res.send(result2);
            });
    }
};


